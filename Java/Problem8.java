import java.util.ArrayList;

public class Problem8 {

	public static void main(String v[]) {
		ArrayList<String> num = new ArrayList<String>();
		double start = System.nanoTime();

		System.out.println("Largest Product of 13 Consecutive digits");

		num.add("73167176531330624919225119674426574742355349194934");
		num.add("96983520312774506326239578318016984801869478851843");
		num.add("85861560789112949495459501737958331952853208805511");
		num.add("12540698747158523863050715693290963295227443043557");
		num.add("66896648950445244523161731856403098711121722383113");
		num.add("62229893423380308135336276614282806444486645238749");
		num.add("30358907296290491560440772390713810515859307960866");
		num.add("70172427121883998797908792274921901699720888093776");
		num.add("65727333001053367881220235421809751254540594752243");
		num.add("52584907711670556013604839586446706324415722155397");
		num.add("53697817977846174064955149290862569321978468622482");
		num.add("83972241375657056057490261407972968652414535100474");
		num.add("82166370484403199890008895243450658541227588666881");
		num.add("16427171479924442928230863465674813919123162824586");
		num.add("17866458359124566529476545682848912883142607690042");
		num.add("24219022671055626321111109370544217506941658960408");
		num.add("07198403850962455444362981230987879927244284909188");
		num.add("84580156166097919133875499200524063689912560717606");
		num.add("05886116467109405077541002256983155200055935729725");
		num.add("71636269561882670428252483600823257530420752963450");

		String[] stockArr = new String[num.size()];

		stockArr = num.toArray(stockArr);
		int add = 0;
		String[] arr = stockArr[0].split("(?<=\\G.{1})|[\r\n]|\r\n");
		for (int j = 0; j < arr.length; j++) {
			add += Integer.parseInt(arr[j]);

		}
		System.out.println(add);
		double end = System.nanoTime();
		System.out.println("Time Elapsed is: " + String.valueOf((end - start))
				+ "ns");
	}
}
